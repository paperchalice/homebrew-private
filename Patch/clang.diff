--- a/clang/lib/Driver/Driver.cpp
+++ b/clang/lib/Driver/Driver.cpp
@@ -215,6 +215,7 @@ Driver::Driver(StringRef ClangExecutable, StringRef TargetTriple,
     SysRoot = std::string(P);
   }
 
+  using namespace std::string_literals;
 #if defined(CLANG_CONFIG_FILE_SYSTEM_DIR)
   SystemConfigDir = CLANG_CONFIG_FILE_SYSTEM_DIR;
 #endif
--- a/clang/lib/Driver/ToolChains/Darwin.cpp
+++ b/clang/lib/Driver/ToolChains/Darwin.cpp
@@ -617,6 +617,7 @@ void darwin::Linker::ConstructJob(Compilation &C, const JobAction &JA,
   if (!Args.hasArg(options::OPT_nostdlib, options::OPT_nostartfiles))
     getMachOToolChain().addStartObjectFileArgs(Args, CmdArgs);
 
+  CmdArgs.push_back("-L/usr/local/lib");
   Args.AddAllArgs(CmdArgs, options::OPT_L);
 
   AddLinkerInputs(getToolChain(), Inputs, Args, CmdArgs, JA);
@@ -2320,6 +2321,7 @@ void DarwinClang::AddClangSystemIncludeArgs(const llvm::opt::ArgList &DriverArgs
       SmallString<128> P(Sysroot);
       llvm::sys::path::append(P, "usr", "local", "include");
       addSystemInclude(DriverArgs, CC1Args, P);
+      addSystemInclude(DriverArgs, CC1Args, "/usr/local/include");
   }
 
   // Add the Clang builtin headers (<resource>/include)
--- a/clang/lib/Lex/InitHeaderSearch.cpp
+++ b/clang/lib/Lex/InitHeaderSearch.cpp
@@ -463,6 +463,7 @@ void InitHeaderSearch::AddDefaultIncludePaths(const LangOptions &Lang,
       // Add the default framework include paths on Darwin.
       AddPath("/System/Library/Frameworks", System, true);
       AddPath("/Library/Frameworks", System, true);
+      AddUnmappedPath("/usr/local/Frameworks", System, true, None);
     }
     return;
   }

--- a/clang/tools/clang-shlib/CMakeLists.txt
+++ b/clang/tools/clang-shlib/CMakeLists.txt
@@ -1,3 +1,4 @@
+return()
 # Building libclang-cpp.so fails if LLVM_ENABLE_PIC=Off
 if (NOT LLVM_ENABLE_PIC)
   return()
